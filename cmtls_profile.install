<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 * Copy of standard profile, omits the page node type
 */
function cmtls_profile_install() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  $default_theme = 'cmtls_base';
  variable_set('theme_default', $default_theme);
  
  $admin_theme = 'seven';
  variable_set('admin_theme', $admin_theme);
  
  $values = array(
    // content region
    array(
      'module' => 'delta_blocks',
      'delta' => 'breadcrumb',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -31,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'delta_blocks',
      'delta' => 'page-title',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -29,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'delta_blocks',
      'delta' => 'tabs',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -28,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -27,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    // header first region
    array(
      'module' => 'delta_blocks',
      'delta' => 'logo',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -1,
      'region' => 'header_first',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'delta_blocks',
      'delta' => 'site-name',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'header_first',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    // header second region
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -1,
      'region' => 'header_second',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    // toolbar first region
    array(
      'module' => 'delta_blocks',
      'delta' => 'site-slogan',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'toolbar_first',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    // toolbar second region
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -25,
      'region' => 'toolbar_second',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'system',
      'delta' => 'user-menu',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -15,
      'region' => 'toolbar_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // sidebar first region
    array(
      'module' => 'menu',
      'delta' => 'menu-cmtls-groups',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
      'title' => st('Groups'),
    ),
    // menu region
    array(
      'module' => 'system',
      'delta' => 'main-menu',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'menu',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'menu',
      'delta' => 'menu-cmtls-global-toolbar',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -29,
      'region' => 'menu',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // admin blocks
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
      'title' => '',
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache', 'title', ));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Insert default pre-defined RDF mapping into the database.
  $rdf_mappings = array(
    array(
      'type' => 'node',
      'bundle' => 'page',
      'mapping' => array(
        'rdftype' => array('foaf:Document'),
      ),
    ),
  );
  foreach ($rdf_mappings as $rdf_mapping) {
    rdf_mapping_save($rdf_mapping);
  }
  
  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Enable the cmtls_base theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'cmtls_base')
    ->execute();
  
  // disable bartik and seven
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();
    
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
    
  variable_set('node_admin_theme', '1');
  
  variable_set('configurable_timezones', 0);
  
  if($_GET['locale'] == 'et') {
    // ET locale settings
    // date and time settings
    variable_set('date_default_timezone', 'Europe/Tallinn');
    variable_set('date_first_day', 1);
    variable_set('date_format_long', 'l, j. F Y - G:i');
    variable_set('date_format_medium', 'j. F Y - G:i');
    variable_set('date_format_short', 'd.m.Y - H:i');
    variable_set('site_default_country', 'EE');
    variable_set('location_default_country', 'ee');
  }
  else {
    // for the date module
    variable_set('date_first_day', 0);
    variable_set('date_format_long', 'l, F j, Y - H:i');
    variable_set('date_format_medium', 'D, m/d/Y - H:i');
    variable_set('date_format_short', 'm/d/Y - H:i');
  }
  
  // set smallet teaser lenght
  variable_set('teaser_length', 200);
  
  // gmap settings
  variable_set('gmap_mm_type', 'gmap');
  variable_set('gmap_markermanager', array (
    'gmarkermanager' => 
    array (
      'borderPadding' => '256',
      'maxZoom' => '4',
      'trackMarkers' => 0,
      'markerMinZoom' => '4',
      'markerMaxZoom' => '0',
    ),
    'markermanager' => 
    array (
      'filename' => 'markermanager_packed.js',
      'borderPadding' => '256',
      'maxZoom' => '4',
      'trackMarkers' => 0,
      'markerMinZoom' => '4',
      'markerMaxZoom' => '0',
    ),
    'markerclusterer' => 
    array (
      'filename' => 'markerclusterer_packed.js',
      'gridSize' => '60',
      'maxZoom' => '17',
    ),
    'clusterer' => 
    array (
      'filename' => 'Clusterer2.js',
      'marker' => 'cluster',
      'max_nocluster' => '150',
      'cluster_min' => '5',
      'max_lines' => '10',
      'popup_mode' => 'orig',
    ),
    'clustermarker' => 
    array (
      'filename' => 'ClusterMarker.js',
      'borderPadding' => '256',
      'clusteringEnabled' => 1,
      'clusterMarkerIcon' => '',
      'clusterMarkerTitle' => '',
      'fitMapMaxZoom' => '0',
      'intersectPadding' => '0',
    ),
  ));
  variable_set('gmap_default', array (
    'width' => '300px',
    'height' => '200px',
    'latlong' => '40,0',
    'zoom' => '3',
    'maxzoom' => '14',
    'styles' => 
    array (
      'line_default' => 
      array (
        0 => '0000ff',
        1 => '5',
        2 => '45',
        3 => '',
        4 => '',
      ),
      'poly_default' => 
      array (
        0 => '000000',
        1 => '3',
        2 => '25',
        3 => 'ff0000',
        4 => '45',
      ),
      'highlight_color' => 'ff0000',
    ),
    'controltype' => 'Small',
    'mtc' => 'standard',
    'maptype' => 'Map',
    'baselayers' => 
    array (
      'Map' => 1,
      'Satellite' => 0,
      'Hybrid' => 0,
      'Physical' => 0,
    ),
    'behavior' => 
    array (
      'locpick' => false,
      'nodrag' => 0,
      'nokeyboard' => 1,
      'nomousezoom' => 0,
      'nocontzoom' => 0,
      'autozoom' => 0,
      'dynmarkers' => 0,
      'overview' => 0,
      'collapsehack' => 0,
      'scale' => 0,
      'extramarkerevents' => false,
      'clickableshapes' => false,
      'googlebar' => 0,
      'highlight' => 0,
    ),
    'markermode' => '0',
    'line_colors' => 
    array (
      0 => '#00cc00',
      1 => '#ff0000',
      2 => '#0000ff',
    ),
  ));
}
