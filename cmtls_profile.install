<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 * Copy of standard profile, omits the page node type
 */
function cmtls_profile_install() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'cache' => '1',
    'status' => '1',
    'weight' => '0',
    'filters' => array(
      'filter_url' => array(
        'weight' => '0',
        'status' => '1',
        'settings' => array(
          'filter_url_length' => '72',
        ),
      ),
      'filter_html' => array(
        'weight' => '1',
        'status' => '1',
        'settings' => array(
          'allowed_html' => '<a> <em> <strong> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd> <h2> <h3> <pre> <object> <embed> <iframe> <param> <p> <br>',
          'filter_html_help' => 1,
          'filter_html_nofollow' => 0,
        ),
      ),
      'filter_autop' => array(
        'weight' => '2',
        'status' => '1',
        'settings' => array(),
      ),
      'filter_htmlcorrector' => array(
        'weight' => '10',
        'status' => '1',
        'settings' => array(),
      ),
      'media_filter' => array(
        'weight' => '10',
        'status' => '1',
        'settings' => array(),
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'cache' => '1',
    'status' => '1',
    'weight' => '1',
    'filters' => array(
      'filter_url' => array(
        'weight' => '0',
        'status' => '1',
        'settings' => array(
          'filter_url_length' => '72',
        ),
      ),
      'filter_autop' => array(
        'weight' => '1',
        'status' => '1',
        'settings' => array(),
      ),
      'filter_htmlcorrector' => array(
        'weight' => '10',
        'status' => '1',
        'settings' => array(),
      ),
      'media_filter' => array(
        'weight' => '10',
        'status' => '1',
        'settings' => array(),
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  cmtls_wysiwyg_profiles();

  $default_theme = 'cmtls_base';
  variable_set('theme_default', $default_theme);

  $admin_theme = 'seven';
  variable_set('admin_theme', $admin_theme);

  variable_set('delta_blocks_toggle', array(
    'logo' => 'logo',
    'site-name' => 'site-name',
    'site-slogan' => 'site-slogan',
    'page-title' => 'page-title',
    'messages' => 'messages',
    'branding' => 0,
    'breadcrumb' => 0,
    'tabs' => 0,
    'action-links' => 0,
    'feed-icons' => 0,
  ));
  cmtls_base_blocks($default_theme);
  cmtls_admin_blocks($admin_theme);

  cmtls_add_custom_block();

  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Insert default pre-defined RDF mapping into the database.
  $rdf_mappings = array(
    array(
      'type' => 'node',
      'bundle' => 'page',
      'mapping' => array(
        'rdftype' => array('foaf:Document'),
      ),
    ),
  );
  foreach ($rdf_mappings as $rdf_mapping) {
    rdf_mapping_save($rdf_mapping);
  }

  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_file_size', '800');
  // @todo: dynamically find the cmtls module location
  variable_set('user_picture_default', 'sites/all/modules/cmtls/images/default-avatar.jpg');

  // Allow visitor account creation
  variable_set('user_register', USER_REGISTER_VISITORS);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array(
    'access content',
    'access comments',
    $filtered_html_permission,
    'access user profiles',
    'search content',
    'use advanced search',
    'view media',
    'view node map',
    'view own unpublished content',
  ));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array(
    'access content',
    'access comments',
    'post comments',
    'skip comment approval',
    $filtered_html_permission,
    'access user profiles',
    'create cmtls_app content',
    'create cmtls_event content',
    'create cmtls_group content',
    'create cmtls_location content',
    'create cmtls_post content',
    'create media_gallery content',
    'delete own cmtls_app content',
    'delete own cmtls_event content',
    'delete own cmtls_group content',
    'delete own cmtls_location content',
    'delete own cmtls_post content',
    'delete own media_gallery content',
    'edit own cmtls_app content',
    'edit own cmtls_event content',
    'edit own cmtls_group content',
    'edit own cmtls_location content',
    'edit own cmtls_post content',
    'edit own comments',
    'edit own media_gallery content',
    'import media',
    'search content',
    'submit latitude/longitude',
    'use advanced search',
    'use text format filtered_html',
    'view location directory',
    'view media',
    'view node location table',
    'view node map',
    'view own unpublished content',
    'administer media',
    'cancel account',
    'access draggableviews',
  ));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
    'weight' => -10,
  );
  menu_link_save($item);

  // disable the media_galleries menu item
  db_merge('menu_links')
    ->key(array(
      'link_path' => 'taxonomy/term/1',
    ))
    ->fields(array(
      'hidden' => 1,
    ))
    ->execute();

  // Update the menu router information.
  menu_rebuild();

  // Enable the cmtls_base theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'cmtls_base')
    ->execute();

  // disable bartik and seven
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();

  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();

  variable_set('node_admin_theme', '1');

  variable_set('configurable_timezones', 0);

  // ET locale settings.
  if($GLOBALS['install_state']['parameters']['locale'] == 'et') {
    variable_set('date_default_timezone', 'Europe/Tallinn');
    variable_set('date_first_day', 1);
    variable_set('date_format_long', 'l, j. F Y - G:i');
    variable_set('date_format_medium', 'j. F Y - G:i');
    variable_set('date_format_short', 'd.m.Y - H:i');
    variable_set('site_default_country', 'EE');
    variable_set('location_default_country', 'ee');
  }
  else {
    // Just for the date module the default en locale settings.
    variable_set('date_first_day', 0);
    variable_set('date_format_long', 'l, F j, Y - H:i');
    variable_set('date_format_medium', 'D, m/d/Y - H:i');
    variable_set('date_format_short', 'm/d/Y - H:i');
  }

  // set smaller teaser lenght
  variable_set('teaser_length', 200);

  // alias' settings
  variable_set('pathauto_transliterate', 1);
  variable_set('pathauto_update_action', 1);

  // gmap settings
  variable_set('gmap_mm_type', 'gmap');
  variable_set('gmap_markermanager', array (
    'gmarkermanager' =>
    array (
      'borderPadding' => '256',
      'maxZoom' => '4',
      'trackMarkers' => 0,
      'markerMinZoom' => '4',
      'markerMaxZoom' => '0',
    ),
    'markermanager' =>
    array (
      'filename' => 'markermanager_packed.js',
      'borderPadding' => '256',
      'maxZoom' => '4',
      'trackMarkers' => 0,
      'markerMinZoom' => '4',
      'markerMaxZoom' => '0',
    ),
    'markerclusterer' =>
    array (
      'filename' => 'markerclusterer_packed.js',
      'gridSize' => '60',
      'maxZoom' => '17',
    ),
    'clusterer' =>
    array (
      'filename' => 'Clusterer2.js',
      'marker' => 'cluster',
      'max_nocluster' => '150',
      'cluster_min' => '5',
      'max_lines' => '10',
      'popup_mode' => 'orig',
    ),
    'clustermarker' =>
    array (
      'filename' => 'ClusterMarker.js',
      'borderPadding' => '256',
      'clusteringEnabled' => 1,
      'clusterMarkerIcon' => '',
      'clusterMarkerTitle' => '',
      'fitMapMaxZoom' => '0',
      'intersectPadding' => '0',
    ),
  ));
  variable_set('gmap_default', array (
    'width' => '100%',
    'height' => '400px',
    'latlong' => '40,0',
    'zoom' => '3',
    'maxzoom' => '14',
    'styles' =>
    array (
      'line_default' =>
      array (
        0 => '0000ff',
        1 => '5',
        2 => '45',
        3 => '',
        4 => '',
      ),
      'poly_default' =>
      array (
        0 => '000000',
        1 => '3',
        2 => '25',
        3 => 'ff0000',
        4 => '45',
      ),
      'highlight_color' => 'ff0000',
    ),
    'controltype' => 'Small',
    'mtc' => 'standard',
    'maptype' => 'Map',
    'baselayers' =>
    array (
      'Map' => 1,
      'Satellite' => 0,
      'Hybrid' => 0,
      'Physical' => 0,
    ),
    'behavior' =>
    array (
      'locpick' => false,
      'nodrag' => 0,
      'nokeyboard' => 1,
      'nomousezoom' => 0,
      'nocontzoom' => 0,
      'autozoom' => 1,
      'dynmarkers' => 0,
      'overview' => 0,
      'collapsehack' => 0,
      'scale' => 0,
      'extramarkerevents' => false,
      'clickableshapes' => false,
      'googlebar' => 0,
      'highlight' => 0,
    ),
    'markermode' => '0',
    'line_colors' =>
    array (
      0 => '#00cc00',
      1 => '#ff0000',
      2 => '#0000ff',
    ),
  ));

  // logintoboggan variables
  variable_set('logintoboggan_confirm_email_at_registration', 0);
  variable_set('logintoboggan_immediate_login_on_register', 1);
  variable_set('logintoboggan_login_block_message', '');
  variable_set('logintoboggan_login_block_type', 2);
  variable_set('logintoboggan_login_successful_message', 0);
  variable_set('logintoboggan_login_with_email', 1);
  variable_set('logintoboggan_minimum_password_length', 0);
  variable_set('logintoboggan_unified_login', 1);

  // disable OG rules
  db_update('rules_config')
    ->fields(array('active' => 0))
    ->condition('module', 'og')
    ->execute();

  // disable OG views
  $views_status = variable_get('views_defaults', array());
  $views_status['og_user_groups'] = TRUE;
  $views_status['og_members'] = TRUE;
  $views_status['og_nodes'] = TRUE;
  $views_status['og_list'] = TRUE;
  variable_set('views_defaults', $views_status);

  // realname config
  variable_set('realname_pattern', '[user:field_cmtls_firstname] [user:field_cmtls_lastname]');

  // non-member
  cmtls_og_role_grant_permissions(1, array(
    'subscribe' => 'og_ui',
    'subscribe without approval' => 'og_ui',
  ));

  // member
  cmtls_og_role_grant_permissions(2, array(
    'unsubscribe' => 'og_ui',
    'delete own cmtls_app content' => 'og',
    'delete own cmtls_event content' => 'og',
    'delete own cmtls_location content' => 'og',
    'delete own cmtls_post content' => 'og',
    'delete own media_gallery content' => 'og',
    'update own cmtls_event content' => 'og',
    'update own cmtls_location content' => 'og',
    'update own cmtls_post content' => 'og',
    'update own media_gallery content' => 'og',
  ));

  // admin
  cmtls_og_role_grant_permissions(3, array(
    'add user' => 'og_ui',
    'approve and deny subscription' => 'og_ui',
    'unsubscribe' => 'og_ui',
    'administer group' => 'og',
    'delete any cmtls_app content' => 'og',
    'delete any cmtls_event content' => 'og',
    'delete any cmtls_location content' => 'og',
    'delete any cmtls_post content' => 'og',
    'delete any media_gallery content' => 'og',
    'delete own cmtls_app content' => 'og',
    'delete own cmtls_event content' => 'og',
    'delete own cmtls_location content' => 'og',
    'delete own cmtls_post content' => 'og',
    'delete own media_gallery content' => 'og',
    'update any cmtls_app content' => 'og',
    'update any cmtls_event content' => 'og',
    'update any cmtls_location content' => 'og',
    'update any cmtls_post content' => 'og',
    'update any media_gallery content' => 'og',
    'update group' => 'og',
    'update own cmtls_app content' => 'og',
    'update own cmtls_event content' => 'og',
    'update own cmtls_location content' => 'og',
    'update own cmtls_post content' => 'og',
    'update own media_gallery content' => 'og',
  ));

  // create the main group
  cmtls_create_main_group();

  // set the frontpage
  variable_set('site_frontpage', 'node/1');

  // Search settings.
  // Use DS search results page.
  variable_set('search_default_module', 'ds_search');

  // Enable DS search.
  $search = variable_get('search_active_modules', array());
  $search['ds_search'] = 'ds_search';
  variable_set('search_active_modules', $search);

  // Set the display type for search results
  variable_set('ds_search_view_mode', 'cmtls_teaser');

  // Enable AJAX comments for content types
  variable_set('ajax_comments_notify', 1);
  variable_set('ajax_comments_node_types', array(
    'cmtls_group' => 'cmtls_group',
    'cmtls_app' => 'cmtls_app',
    'cmtls_post' => 'cmtls_post',
    'cmtls_location' => 'cmtls_location',
    'cmtls_event' => 'cmtls_event',
    'media_gallery' => 'media_gallery',
  ));

  // Add updates.
  cmtls_profile_update_7201();
}

/**
 * Settings for the CAPTCHA and Hidden CAPTCHA modules
 */
function cmtls_captcha_settings() {
  module_load_include('inc', 'captcha', 'captcha');

  // Hidden CAPTCHA settings.
  variable_set('captcha_default_challenge', 'hidden_captcha/Hidden CAPTCHA');

  // Forms require CAPTCHA.
  captcha_set_form_id_setting('comment_node_cmtls_app_form', 'default');
  captcha_set_form_id_setting('comment_node_cmtls_event_form', 'default');
  captcha_set_form_id_setting('comment_node_cmtls_group_form', 'default');
  captcha_set_form_id_setting('comment_node_cmtls_location_form', 'default');
  captcha_set_form_id_setting('comment_node_cmtls_post_form', 'default');
  captcha_set_form_id_setting('comment_node_media_gallery_form', 'default');
  captcha_set_form_id_setting('contact_personal_form', 'default');
  captcha_set_form_id_setting('contact_site_form', 'default');
  captcha_set_form_id_setting('forum_node_form', 'default');
  captcha_set_form_id_setting('user_login', 'default');
  captcha_set_form_id_setting('user_login_block', 'default');
  captcha_set_form_id_setting('user_pass', 'default');
  captcha_set_form_id_setting('user_register_form', 'default');
}

function cmtls_base_blocks($theme) {
  $values = array(
    // content region
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $theme,
      'status' => 1,
      'weight' => -31,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'delta_blocks',
      'delta' => 'messages',
      'theme' => $theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $theme,
      'status' => 1,
      'weight' => -29,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // header first region
    array(
      'module' => 'delta_blocks',
      'delta' => 'logo',
      'theme' => $theme,
      'status' => 1,
      'weight' => -25,
      'region' => 'header_first',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'cmtls',
      'delta' => 'cmtls_site_title',
      'theme' => $theme,
      'status' => 1,
      'weight' => -24,
      'region' => 'header_first',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'cmtls',
      'delta' => 'cmtls_site_slogan',
      'theme' => $theme,
      'status' => 1,
      'weight' => -23,
      'region' => 'header_first',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // toolbar second region
    array(
      'module' => 'system',
      'delta' => 'user-menu',
      'theme' => $theme,
      'status' => 1,
      'weight' => -24,
      'region' => 'toolbar_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $theme,
      'status' => 1,
      'weight' => -23,
      'region' => 'toolbar_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $theme,
      'status' => 1,
      'weight' => -22,
      'region' => 'toolbar_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // menu region
    array(
      'module' => 'system',
      'delta' => 'main-menu',
      'theme' => $theme,
      'status' => 1,
      'weight' => -24,
      'region' => 'menu',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'views',
      'delta' => 'cmtls_common_elements-block_3',
      'theme' => $theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'preface_first',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // preface second
    array(
      'module' => 'cmtls',
      'delta' => 'cmtls_edit_buttons',
      'theme' => $theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'preface_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    // footer second
    array(
      'module' => 'user',
      'delta' => 'online',
      'theme' => $theme,
      'status' => 1,
      'weight' => -30,
      'region' => 'footer_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'cmtls',
      'delta' => 'cmtls_powered_by',
      'theme' => $theme,
      'status' => 1,
      'weight' => -29,
      'region' => 'footer_second',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache', 'title', ));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();
}

function cmtls_admin_blocks($theme) {
  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
      'title' => '<none>',
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache', 'title', ));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();
}

function cmtls_add_custom_block() {
  $delta = db_insert('block_custom')
    ->fields(array(
      'body' => st('Custom block body'),
      'info' => st('Custom block description'),
      'format' => 'full_html',
    ))
    ->execute();

  $query = db_insert('block')->fields(array('visibility', 'pages', 'custom', 'title', 'module', 'theme', 'status', 'weight', 'delta', 'cache', 'region'));
  $query->values(array(
    'visibility' => 0,
    'pages' => '',
    'custom' => 0,
    'title' => st('Custom block title'),
    'module' => 'block',
    'theme' => 'cmtls_base',
    'status' => 1,
    'weight' => 0,
    'delta' => $delta,
    'cache' => DRUPAL_NO_CACHE,
    'region' => 'footer_first',
  ));
  $query->execute();
}

function cmtls_wysiwyg_profiles() {
  $full_html = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => NULL,
    'buttons' => array(
      'default' => array(
        'Bold' => 1,
        'Italic' => 1,
        'BulletedList' => 1,
        'NumberedList' => 1,
        'Link' => 1,
        'Anchor' => 1,
        'Source' => 1,
        'Format' => 1,
        'Table' => 1,
      ),
      'drupal' => array(
        'media' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  $fields = array(
    'format' => 'full_html',
    'editor' => 'ckeditor',
    'settings' => serialize($full_html),
  );

  db_insert('wysiwyg')->fields($fields)->execute();

  $filtered_html = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => NULL,
    'buttons' => array(
      'default' => array(
        'Bold' => 1,
        'Italic' => 1,
        'BulletedList' => 1,
        'NumberedList' => 1,
        'Link' => 1,
        'Anchor' => 1,
        'Source' => 1,
        'Format' => 1,
        'Table' => 1,
      ),
      'drupal' => array(
        'media' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  $fields = array(
    'format' => 'filtered_html',
    'editor' => 'ckeditor',
    'settings' => serialize($filtered_html),
  );

  db_insert('wysiwyg')->fields($fields)->execute();
}

/**
 * Update 2.0-beta2
 */
function cmtls_profile_update_7201() {
  // Add new modules.
  module_enable(array(
    'rules_scheduler',
    'hidden_captcha',
    'nice_menus',
    'flag',
    'admin_menu_toolbar',
    'webform',
  ));

  // Schedule the first daily mail.
  rules_scheduler_schedule_task(array(
    'date' => strtotime('+1 day 14:00'),
    'config' => 'rules_cmtls_daily_newsletter',
    'state' => new RulesState(),
    'identifier' => 'CT daily newsletter',
  ));

  // CAPTCHA.
  cmtls_captcha_settings();

  // Add media gallery correctly to ajax comments.
  $ajax_comments = variable_get('ajax_comments_node_types', array());
  $ajax_comments['media_gallery'] = 'media_gallery';
  variable_set('ajax_comments_node_types', $ajax_comments);

  // Set the i18n language else field translations won't work.
  variable_set('i18n_string_source_language', 'en');

  // Keep old aliases, this is need for migrated sites.
  variable_set('pathauto_update_action', 1);

  // Enable CSS/JS compression.
  variable_set('preprocess_css', 1);
  variable_set('preprocess_js', 1);

  // Nice menus.
  variable_set('nice_menus_depth_1', -1);
  variable_set('nice_menus_menu_1', 'main-menu');
  variable_set('nice_menus_name_1', 'Main menu');
  variable_set('nice_menus_type_1', 'down');

  // Activate nice menu block 1.
  $query = db_merge('block')
    ->key(array(
      'module' => 'nice_menus',
      'delta' => '1',
    ))
    ->fields(array(
      'status' => 1,
      'weight' => 0,
      'region' => 'menu',
      'pages' => '',
      'title' => '<none>',
      'cache' => DRUPAL_NO_CACHE,
      'theme' => 'cmtls_base',
    ))
    ->execute();

  // Deactivate main menu block.
  $query = db_merge('block')
    ->key(array(
      'module' => 'system',
      'delta' => 'main-menu',
      'theme' => 'cmtls_base',
    ))
    ->fields(array(
      'status' => 0,
      'region' => -1,
      'pages' => '',
    ))
    ->execute();

  // Rerarrange the toolbar second blocks,
  // due to style changes in CT base theme.
  $query = db_merge('block')
    ->key(array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => 'cmtls_base',
    ))
    ->fields(array(
      'weight' => '-24',
    ))
    ->execute();

  $query = db_merge('block')
    ->key(array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => 'cmtls_base',
    ))
    ->fields(array(
      'weight' => '-23',
    ))
    ->execute();

  $query = db_merge('block')
    ->key(array(
      'module' => 'system',
      'delta' => 'user-menu',
      'theme' => 'cmtls_base',
    ))
    ->fields(array(
      'weight' => '-22',
    ))
    ->execute();

  // Remove the edit buttons block, this is now handled by Context.
  $query = db_delete('block')
    ->condition('module', 'cmtls')
    ->condition('delta', 'cmtls_edit_buttons')
    ->execute();

  // Disable admin menu client side cache, see http://drupal.org/node/442560.
  variable_set('admin_menu_cache_client', 0);

  // Update the custom block to "About us" block.
  db_update('block')
    ->fields(array('title' => st('About us')))
    ->condition('module', 'block')
    ->condition('title', st('Custom block title'))
    ->execute();

  db_update('block_custom')
    ->fields(array(
      'body' => st('This is community website running on Community Tools, a distribution on Drupal.'),
      'info' => st('About us'),
    ))
    ->condition('body', st('Custom block body'))
    ->condition('info', st('Custom block description'))
    ->execute();
}
